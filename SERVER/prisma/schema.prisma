generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  selling_price Float
  cost_price    Float
  quantity      Int
  discount      Float?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  categoryId    Int
  status        ProductState   @default(ACTIVE)
  images        Image[]
  category      Category       @relation(fields: [categoryId], references: [id])
  orderProducts orderProduct[]
  soldCount     Int            @default(0)
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}

model Order {
  id                        Int            @id @default(autoincrement())
  customer_name             String
  customer_phone            String
  customer_address          String
  total_amount              Float
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
  createdByAdmin            Boolean        @default(false)
  profit                    Float          @default(0)
  userId                    Int
  discount                  Float          @default(0)
  delivery_fee              Float          @default(0)
  status                    OrderState     @default(PENDING)
  customer_address_landmark String?
  customer_email            String?
  user                      User           @relation(fields: [userId], references: [id])
  orderProducts             orderProduct[]
}

model orderProduct {
  id        Int      @id @default(autoincrement())
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   Int
  productId Int
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  name      String?
  phone     String?
  profile   String?
  role      UserRole  @default(USER)
  orders    Order[]
  address   address[]
}

model address {
  id        Int      @id @default(autoincrement())
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  image     String?
  products  Product[]
}

enum UserRole {
  MANAGER
  ADMIN
  USER
}

enum ProductState {
  ACTIVE
  DRAFT
  ARCHIVED
}

enum OrderState {
  PENDING
  DELIVERED
  CANCELLED
  PACKED
  SHIPPED
}
