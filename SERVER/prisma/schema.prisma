// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
enum Role {
  Manager
  ADMIN
  USER
}

enum ProductStatus {
  ACTIVE
  DRAFT
  ARCHIVED
}

enum OrderStatus {
  PENDING
  DELIVERED
  CANCELLED
  PACKED
  SHIPED
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  selling_price Float
  cost_price    Float
  quantity      Int
  discount      Float?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?
  orders        Order[]
  categoryId    Int
  status        ProductStatus @default(ACTIVE)
  category      Category      @relation(fields: [categoryId], references: [id])
  images        Image[]
}

model Image {
  id        Int       @id @default(autoincrement())
  url       String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  productId Int
  product   Product   @relation(fields: [productId], references: [id])
}

model Order {
  id               Int         @id @default(autoincrement())
  customer_name    String
  customer_phone   String
  customer_email   String
  customer_address String
  total_amount     Float
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  deletedAt        DateTime?
  discount         Float
  profit           Float
  products         Product[]
  delivery_fee     Float       @default(0)
  userId           Int
  user             User        @relation(fields: [userId], references: [id])
  status           OrderStatus @default(PENDING)
  createdByAdmin   Boolean     @default(false)
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  deletedAt DateTime?
  role      Role      @default(USER)
  name      String?
  phone     String?
  address   String?
  orders    Order[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  image     String?
  Product   Product[]
}
